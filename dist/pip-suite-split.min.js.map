{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/ISplitService.ts","src/SplitService.ts","src/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","split","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","MobileState","run","$rootScope","pipSplit","$state","$on","event","toState","toParams","fromState","fromParams","splitElements","$","removeClass","name","forwardTransition","addClass","debounceResize","_","debounce","goToDesktopState","current","go","params","layouts","MainResizedEvent","breakpoints","xs","$inject","SplitService_1","prototype","transitionSequences","toIndex","indexOf","fromIndex","mobileStates","findIndex","state","SplitProvider","addTransitionSequence","sequence","isArray","push","$get","_service","provider","Object","defineProperty","value","angular"],"mappings":"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","file":"pip-suite-split.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export interface ISplitService {\n    forwardTransition(toState: any, fromState: any): boolean;\n    goToDesktopState(fromState: string): string;\n}\n\nexport interface ISplitProvider {\n    addTransitionSequence(sequence: string[], mobileStates?: MobileState[]): void;\n}\n\nexport class MobileState {\n    name: string;\n    toStateName: string;\n}","/// <reference path=\"../typings/tsd.d.ts\" />\n\nimport {\n    ISplitService,\n    ISplitProvider,\n    MobileState\n} from './ISplitService';\n\n{\n    const run = function (\n        $rootScope: ng.IRootScopeService, pipSplit: ISplitService, $state: ng.ui.IStateService\n    ) {\n        $rootScope.$on('$stateChangeStart',\n            (event, toState, toParams, fromState, fromParams) => {\n                // Split animation\n                const splitElements = $('.pip-split');\n\n                if (splitElements.length > 0) {\n                    splitElements.removeClass('pip-transition-forward');\n                    splitElements.removeClass('pip-transition-back');\n                    if (toState.name != fromState.name) {\n                        if (pipSplit.forwardTransition(toState, fromState)) {\n                            splitElements.addClass('pip-transition-forward');\n                        } else {\n                            splitElements.addClass('pip-transition-back');\n                        }\n                    }\n                }\n            }\n        );\n\n        const debounceResize = _.debounce(() => {\n            const toState = pipSplit.goToDesktopState($state.current.name);\n            if (toState) $state.go(toState, $state.current.params);\n        }, 100);\n\n        $rootScope.$on(pip.layouts.MainResizedEvent, (\n            event: ng.IAngularEvent,\n            breakpoints: pip.layouts.MediaBreakpointStatuses\n        ) => {\n            if (!breakpoints.xs) {\n                debounceResize();\n            }\n        });\n\n    }\n\n    class SplitService implements ISplitService {\n        constructor(\n            private transitionSequences: any,\n            private mobileStates: any\n        ) {}\n\n        public forwardTransition(toState, fromState) {\n            for (let i = 0; i < this.transitionSequences.length; i++) {\n                const toIndex = this.transitionSequences[i].indexOf(toState.name);\n                const fromIndex = this.transitionSequences[i].indexOf(fromState.name);\n\n                if (toIndex > -1) {\n                    return toIndex > fromIndex;\n                }\n            }\n\n            return false\n        }\n\n        public goToDesktopState(fromState: string): string {\n            for (let i = 0; i < this.mobileStates.length; i++) {\n                const fromIndex = _.findIndex(this.mobileStates[i], (state: MobileState) => {\n                    return state.name === fromState;\n                })\n\n                if (fromIndex > -1) {\n                    return this.mobileStates[i][fromIndex].toState;\n                }\n            }\n\n            return '';\n        }\n    }\n\n    class SplitProvider implements ISplitProvider {\n        private transitionSequences: any = [];\n        private mobileStates: any = [];\n        private _service: ISplitService;\n\n        constructor() {}\n\n        public addTransitionSequence(sequence: string[], mobileStates ? : MobileState[]) {\n            if (!_.isArray(sequence) || sequence.length == 0) {\n                throw new Error('Transition sequence must be an array of state names');\n            }\n\n            this.transitionSequences.push(sequence);\n            this.mobileStates.push(mobileStates);\n        }\n\n        public $get() {\n            \"ngInject\";\n\n            if (this._service == null)\n                this._service = new SplitService(this.transitionSequences, this.mobileStates);\n\n            return this._service;\n        }\n    }\n\n    angular.module('pipSplit', [])\n        .run(run)\n        .provider('pipSplit', SplitProvider);\n}","/// <reference path=\"../typings/tsd.d.ts\" />\n\nangular.module('pipSplit', []);\n\nimport './SplitService';\n\nexport * from './ISplitService';"]}